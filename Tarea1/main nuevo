#include "Fecha.h"
#include "Direccion.h"
#include "DtEmpleado.h"
#include "DtEmpresa.h"
#include "DtExtranjera.h"
#include "DtNacional.h"
#include "Extranjera.h"
#include "Nacional.h"
#include "Empleado.h"
#include <iostream>
#include <stdlib.h>

#define MAX_EMPLEADOS 6
#define MAX_EMPRESAS 3

using namespace std;

Fecha* fecha;

Extranjera* Ext;

Empleado** emp;
Empresa** empresas;


void imprimirFecha(Fecha* fecha) {
	cout << fecha->getDia();
	cout << "/";
	cout << fecha->getMes();
	cout << "/";
	cout << fecha->getAnio();
}

void imprimirDireccion(Direccion* direccion) {
	cout << direccion->getPais();
	cout << ", ";
	cout << direccion->getCiudad();
	cout << ", ";
	cout << direccion->getCalle();
	cout << " ";
	cout << direccion->getNumero();
}

void imprimirEmpresa(Empresa* Empresa) {
    cout << "ID: ";
    cout << Empresa->getId();
    cout << "\nDireccion: ";
    imprimirDireccion(Empresa->getDireccion());
}

void imprimirNacional(Nacional* Nacional) {
    imprimirEmpresa(Nacional);
    cout << "\nRUT: ";
    cout << Nacional->getRut();
}

void imprimirExtranjera(Extranjera* Extranjera) {
    imprimirEmpresa(Extranjera);
    cout << "\nNombre Fantasia: ";
    cout << Extranjera->getNombreFantasia();
}


void agregarEmpleado(string ci, string nombre, string apellido, Direccion dir){
    int cont = 0;
    int pos;

    for(int i=0;i<MAX_EMPLEADOS;i++){
        if(emp[i]!=NULL){
            if(emp[i]->getCi()==ci){
                //throw make exception
                cout<<"ya existe el empleado";
                return;
            }
        } else {
            cont++;
            pos=i;
        }
    }if(cont==0){
        //throw make exception
        cout<<"no hay mas espacio";
                return;
    }else{
        emp[pos]= new Empleado(ci,nombre,apellido,&dir);
    }
}

void agregarEmpresa(DtEmpresa& empresa){
    int cont = 0;
    int pos;

    for(int i=0;i<MAX_EMPRESAS;i++){
        if(empresas[i]!=NULL){
            if(empresas[i]->getId()==empresa.getId()){
                //throw make exception
                cout<<"ya existe la empresa";
                return;
            }
        } else {
            cont++;
            pos=i;
        }
    }if(cont==0){
        //throw make exception
        cout<<"no hay mas espacio para empresas";
                return;
    }else{
        DtNacional* dtNac = dynamic_cast <DtNacional*> (&empresa);
        
        if (dtNac != NULL) {
            empresas[pos] = new Nacional(dtNac->getId(), dtNac->getDireccion(), dtNac->getRut());
        } else {
            DtExtranjera* dtExt = dynamic_cast <DtExtranjera*> (&empresa);
            empresas[pos] = new Extranjera(dtExt->getId(), dtExt->getDireccion(), dtExt->getNombreFantasia());
        }
    }
}

void imprimirEmpleado(Empleado* e){
    cout<<"\nCI: ";
    cout<<e->getCi();
    cout<<"\nNombre: ";
    cout<<e->getNombre();
    cout<<"\nDireccion: ";
    imprimirDireccion(e->getDireccion());
}

void mostrarEmpleado(){
    for(int i=0;i<MAX_EMPLEADOS;i++){
        if(emp[i]!=NULL){
            imprimirEmpleado(emp[i]);
        }else
            cout<<"NULL\n";
    }
}

void mostrarEmpresas(){
    for(int i=0;i<MAX_EMPRESAS;i++){
    cout << endl;
    cout << endl;
        if(empresas[i]!=NULL){
            Nacional* n = dynamic_cast <Nacional*> (empresas[i]);
            if (n != NULL) {
                imprimirNacional(n);
            } else {
                Extranjera* e = dynamic_cast <Extranjera*> (empresas[i]);
                imprimirExtranjera(e);
            }
        }else
            cout<<"NULL\n";
    }
}

int main() {
    emp=(Empleado**)malloc(sizeof(Empleado)*MAX_EMPLEADOS);
    empresas=(Empresa**)malloc(sizeof(Empresa)*MAX_EMPRESAS);

    for(int i=0;i<MAX_EMPLEADOS;i++){
        emp[i]=NULL;
    }
    
    for(int i=0;i<MAX_EMPRESAS;i++){
        empresas[i]=NULL;
    }
    
    agregarEmpresa(*(new DtNacional("id", new Direccion("","","",""), "Rut")));
    agregarEmpresa(*(new DtNacional("id2", new Direccion("","","",""), "Rut")));
    agregarEmpresa(*(new DtNacional("id23", new Direccion("","","",""), "Rut")));
    mostrarEmpresas();
    agregarEmpresa(*(new DtNacional("id23", new Direccion("","","",""), "Rut")));
}
